version: '3.8'

services:
  db:
    image: postgres:17
    container_name: sjfjuristas-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: sjfjuristas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "12345678"
    ports:
      - "5432:5432"
    volumes:
      - ../backend/schema.sql:/docker-entrypoint-initdb.d/1-init-schema.sql
      - ../db/base_info.sql:/docker-entrypoint-initdb.d/2-base-info.sql
      - db_data:/var/lib/postgresql/data
    networks:
      - sjf-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: sjfjuristas-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: "12345678"
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - sjf-network

  minio:
    image: minio/minio:latest
    container_name: sjfjuristas-minio
    restart: unless-stopped
    environment:
  
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: "12345678"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - sjf-network

  create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio http://minio:9000 admin 12345678;
      /usr/bin/mc mb minio/propostas-documentos --ignore-existing;
      /usr/bin/mc policy set public minio/propostas-documentos;
      exit 0;
      "
    networks:
      - sjf-network

# --- REDE COMPARTILHADA PARA OS SERVIÇOS ---
networks:
  sjf-network:
    driver: bridge

# --- VOLUMES PARA PERSISTÊNCIA DE DADOS ---
volumes:
  db_data:
  pgadmin_data:
  minio_data: